//
// This file was generated by the JPA Modeler
//
package br.edu.ifpb.ads.praticas.immobilly.entidadesnusada;

import br.edu.ifpb.ads.praticas.immobilly.entidades.Veiculo;
import java.io.Serializable;
import java.util.Date;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.ws.rs.FormParam;

/**
 * @author aluisio
 */
@Entity
public class Reserva implements Serializable {

    @Id
    @FormParam("id")
    @GeneratedValue
    private long id;

    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    @FormParam("horarioSaida")
    private Date horarioSaida;

    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    @FormParam("horarioRetorno")
    private Date horarioRetorno;

    @Basic
    @FormParam("status")
    private int status;

    @OneToOne(cascade = {CascadeType.ALL}, targetEntity = Colaborador.class)
    private Colaborador colaborador;

    @OneToOne(cascade = {CascadeType.ALL}, targetEntity = Veiculo.class)
    private Veiculo veiculo;

    public Reserva() {
    }

    public Reserva(Date horarioSaida, Date horarioRetorno, int status, Colaborador colaborador, Veiculo veiculo) {
        this.horarioSaida = horarioSaida;
        this.horarioRetorno = horarioRetorno;
        this.status = status;
        this.colaborador = colaborador;
        this.veiculo = veiculo;
    }

    public Reserva(long id, Date horarioSaida, Date horarioRetorno, int status, Colaborador colaborador, Veiculo veiculo) {
        this.id = id;
        this.horarioSaida = horarioSaida;
        this.horarioRetorno = horarioRetorno;
        this.status = status;
        this.colaborador = colaborador;
        this.veiculo = veiculo;
    }

    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public Date getHorarioSaida() {
        return this.horarioSaida;
    }

    public void setHorarioSaida(Date horarioSaida) {
        this.horarioSaida = horarioSaida;
    }

    public Date getHorarioRetorno() {
        return this.horarioRetorno;
    }

    public void setHorarioRetorno(Date horarioRetorno) {
        this.horarioRetorno = horarioRetorno;
    }

    public int getStatus() {
        return this.status;
    }

    public void setStatus(int status) {
        this.status = status;
    }

    public Colaborador getColaborador() {
        return this.colaborador;
    }

    public void setColaborador(Colaborador colaborador) {
        this.colaborador = colaborador;
    }

    public Veiculo getVeiculo() {
        return this.veiculo;
    }

    public void setVeiculo(Veiculo veiculo) {
        this.veiculo = veiculo;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 29 * hash + (int) (this.id ^ (this.id >>> 32));
        hash = 29 * hash + Objects.hashCode(this.horarioSaida);
        hash = 29 * hash + Objects.hashCode(this.horarioRetorno);
        hash = 29 * hash + this.status;
        hash = 29 * hash + Objects.hashCode(this.colaborador);
        hash = 29 * hash + Objects.hashCode(this.veiculo);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Reserva other = (Reserva) obj;
        if (this.id != other.id) {
            return false;
        }
        if (this.status != other.status) {
            return false;
        }
        if (!Objects.equals(this.horarioSaida, other.horarioSaida)) {
            return false;
        }
        if (!Objects.equals(this.horarioRetorno, other.horarioRetorno)) {
            return false;
        }
        if (!Objects.equals(this.colaborador, other.colaborador)) {
            return false;
        }
        if (!Objects.equals(this.veiculo, other.veiculo)) {
            return false;
        }
        return true;
    }

}
